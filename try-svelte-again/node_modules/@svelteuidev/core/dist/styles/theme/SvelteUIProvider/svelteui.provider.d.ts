import type { CSS, ColorScheme, DefaultProps, DeepPartial, SvelteUITheme } from '../types';
export type ProviderStyles = Record<string, Record<string, CSS> | ((theme: SvelteUITheme, params: Record<string, any>) => Record<string, CSS>)>;
export type SvelteUIDefaultProps = Record<string, Record<string, any>>;
export interface SvelteUIProviderContextType {
    theme: SvelteUITheme;
    styles: ProviderStyles;
    defaultProps: SvelteUIDefaultProps;
}
export interface SvelteUIProviderProps extends DefaultProps<HTMLDivElement> {
    theme?: DeepPartial<SvelteUITheme>;
    styles?: ProviderStyles;
    defaultProps?: SvelteUIDefaultProps;
    themeObserver?: ColorScheme;
    withNormalizeCSS?: boolean;
    withGlobalStyles?: boolean;
    inherit?: boolean;
}
/** --------------------- */
export declare const key: {};
export declare const globalStyles: (themeObserver: ColorScheme) => string;
export declare function useSvelteUIThemeContext(): SvelteUIProviderContextType;
export declare function useSvelteUIDefaultProps<T extends Record<string, any>>(component: string, defaultProps: Partial<T>, props: T): T;
