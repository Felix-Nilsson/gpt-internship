import { writable } from 'svelte/store';
import { onMount } from 'svelte';
import { browser, defaultWindow } from '../../shared/utilities/utils/index.js';
const listenerOptions = {
    passive: true
};
export function useBrowserContext() {
    let window;
    if (browser)
        window = defaultWindow;
    const setState = (trigger) => {
        const { state, length } = window?.history ?? {};
        const { hash, host, hostname, href, origin, pathname, port, protocol, search } = window?.location ?? {};
        return {
            trigger,
            state,
            length,
            hash,
            host,
            hostname,
            href,
            origin,
            pathname,
            port,
            protocol,
            search
        };
    };
    const state = writable(setState('load'));
    onMount(() => {
        window.addEventListener('popstate', () => state.set(setState('popstate')), listenerOptions);
        window.addEventListener('hashchange', () => state.set(setState('hashchange')), listenerOptions);
        return () => {
            window.removeEventListener('popstate', () => state.set(setState('popstate')));
            window.removeEventListener('hashchange', () => state.set(setState('hashchange')));
        };
    });
    return state;
}
