import { tick } from 'svelte';
/**
 * With the `use-download` action, a download will occur with a given Blob object as a file with the given filename.
 *
 * ```tsx
 *  <button use:download={{ blob: new Blob([]), filename: "text.txt" }} on:usedownload={() => { console.log('download');}}>Download</button>
 * ```
 * @param params - Object that contains two properties {blob: Blob, filename: string}
 * @see https://svelteui.org/actions/use-download
 */
export function download(node, params) {
    const click = async () => {
        const { blob, filename } = params;
        try {
            const anchor = document.createElement('a');
            const url = URL.createObjectURL(blob);
            anchor.href = url;
            anchor.download = filename || '';
            document.body.appendChild(anchor);
            anchor.click();
            await tick();
            document.body.removeChild(anchor);
            URL.revokeObjectURL(url);
            node.dispatchEvent(new CustomEvent('usedownload', { detail: { blob: blob, filename: filename } }));
        }
        catch (e) {
            node.dispatchEvent(new CustomEvent('usedownload-error', { detail: { blob: blob, filename: filename } }));
        }
    };
    node.addEventListener('click', click, true);
    return {
        update: (_params) => (params = _params),
        destroy: () => node.removeEventListener('click', click, true)
    };
}
