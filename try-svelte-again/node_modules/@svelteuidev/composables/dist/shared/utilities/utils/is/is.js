/** Type guards to define whether a value is of a specific type */
const toString = Object.prototype.toString;
export const isClient = typeof window !== undefined;
export const isBoolean = (val) => typeof val === 'boolean';
export const isFunction = (val) => typeof val === 'function';
export const isNumber = (val) => typeof val === 'number';
export const isString = (val) => typeof val === 'string';
export const isObject = (val) => toString.call(val) === '[object Object]';
export const isWindow = (val) => typeof window !== 'undefined' && toString.call(val) === '[object Window]';
export const now = () => Date.now();
export const timestamp = () => +Date.now();
export const sleep = (ms = 2000) => new Promise((r) => setTimeout(r, ms));
export const rand = (min, max) => {
    min = Math.ceil(min);
    max = Math.floor(max);
    return Math.floor(Math.random() * (max - min + 1)) + min;
};
