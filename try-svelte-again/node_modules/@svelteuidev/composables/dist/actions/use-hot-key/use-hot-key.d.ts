import { getHotkeyHandler } from './parse-hotkey.js';
import type { Action } from '../../shared/actions/types';
export { getHotkeyHandler };
export type HotkeyItem = [string, (event: KeyboardEvent) => void];
/**
 * Listen for keys combinations on the document element, if you need to listen for keybindings on a specific element then you will need to use the getHotkeyHandler function instead.
 *
 * @example
 * ```tsx
 *  <div
 * 		use:hotkey={[
 *             ['mod+Enter', () => console.log('Command/Ctrl + enter')],
 * 			['shift + 4', toggle()]
 *         ]}
 *  >
 * 		Keybindings added to document element
 *  </div>
 * ```
 * @param hotkeys - an array of HotKeyItem's which are arrays of key combinations and callback functions
 * @see https://svelteui.org/actions/use-hotkey
 */
export declare function hotkey(node: HTMLElement, hotkeys: HotkeyItem[]): ReturnType<Action>;
