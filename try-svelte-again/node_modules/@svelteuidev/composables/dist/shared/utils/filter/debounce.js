export function debounceFilter(ms, options = {}) {
    let timer;
    let maxTimer;
    const filter = (invoke) => {
        const duration = ms;
        const maxDuration = options.maxWait;
        if (timer)
            clearTimeout(timer);
        if (duration <= 0 || (maxDuration !== undefined && maxDuration <= 0)) {
            if (maxTimer) {
                clearTimeout(maxTimer);
                maxTimer = null;
            }
            return invoke();
        }
        // Create the maxTimer. Clears the regular timer on invokation
        if (maxDuration && !maxTimer) {
            maxTimer = setTimeout(() => {
                if (timer)
                    clearTimeout(timer);
                maxTimer = null;
                invoke();
            }, maxDuration);
        }
        // Create the regular timer. Clears the max timer on invokation
        timer = setTimeout(() => {
            if (maxTimer)
                clearTimeout(maxTimer);
            maxTimer = null;
            invoke();
        }, duration);
    };
    return filter;
}
