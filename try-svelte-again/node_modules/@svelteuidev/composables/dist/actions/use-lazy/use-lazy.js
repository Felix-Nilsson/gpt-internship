const nodeAttributesMap = new WeakMap();
const intersection_handler = (entries) => {
    entries.forEach((entry) => {
        if (entry.isIntersecting && entry.target instanceof HTMLElement) {
            const node = entry.target;
            Object.assign(node, nodeAttributesMap.get(node));
            lazyLoadObserver.unobserve(node);
        }
    });
};
let lazyLoadObserver;
function observer() {
    return (lazyLoadObserver ?? (lazyLoadObserver = new IntersectionObserver(intersection_handler)));
}
// prettier-ignore
/**
 * With the `use-lazy` action, you can set attributes on an element when it is visible in the viewport.
 *
 * @example
 * ```svelte
 *  <img use:lazy={{src:"/my-image"}} alt="My Image">
 * ```
 * @param attributes - an object whose properties are the attributes to be applied, and the values are the attr values
 * @see https://svelteui.org/actions/use-lazy
 */
export function lazy(node, attributes) {
    nodeAttributesMap.set(node, attributes);
    observer().observe(node);
    return {
        destroy() {
            observer().unobserve(node);
        }
    };
}
