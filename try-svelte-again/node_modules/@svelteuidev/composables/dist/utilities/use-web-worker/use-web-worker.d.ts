import type { ConfigurableWindow } from '../../shared/index.js';
export type WebWorkerStatus = 'PENDING' | 'SUCCESS' | 'RUNNING' | 'ERROR' | 'TIMEOUT_EXPIRED';
export interface WebWorkerOptions extends ConfigurableWindow {
    timeout?: number;
    dependencies?: string[];
}
export interface UseWebWorkerReturn {
    workerFn: (...fnArgs: any[]) => Promise<any>;
    workerStatus: WebWorkerStatus;
    workerTerminate: (status?: WebWorkerStatus) => void;
}
/**
 * Run expensive function without blocking the UI, using a simple syntax that makes use of Promise.
 *
 * @see https://svelteui.org/composables/use-web-worker
 * @param fn
 * @param options
 */
export declare const useWebWorker: <T extends (...fnArgs: any[]) => any>(fn: T, options?: WebWorkerOptions) => UseWebWorkerReturn;
